plugins {
    /**
     * Use `apply false` in the top-level build.gradle file to add a Gradle
     * plugin as a build dependency but not apply it to the current (root)
     * project.
     */
    id "com.android.library" version "7.4.0" apply false
    id "com.google.protobuf" version "0.9.1" apply false
    id "org.jetbrains.kotlin.android" version "1.7.20" apply false
}

ext {
    sdkVersion = 31
    minSdkVersion = 26
    protocVersion = 'com.google.protobuf:protoc:3.21.12'
}

apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.sdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.sdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/tests/unit/schemas".toString(),
                ]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [
                'trustagent/src',
                'encryptionrunner/src',
                'calendarsync/src',
                'communication/src',
                'loggingsupport/src',
                'trusteddevice/src',
                'connectionservice/src',
            ]
            proto.srcDirs = [
                'calendarsync/src',
                'companionprotos/src',
                'communicationproto/src',
                'trusteddeviceproto/src',
            ]
            res.srcDirs = [
                'trustagent/res',
                'connectionservice/res',
                'communication/res',
            ]
        }
        // No test is included at root project.
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation files('encryptionrunner/ukey2.jar')

    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    implementation libs.dagger
    implementation libs.gson
    implementation libs.guava
    implementation libs.javax.annotation
    implementation libs.protobuf

    implementation libs.bundles.androidx
    implementation libs.bundles.androidx.lifecycle
    implementation libs.bundles.androidx.room
    implementation libs.bundles.kotlin
    implementation libs.bundles.autovalue

    implementation project(path: ":communication")
    implementation project(path: ":calendarsync")
    implementation project(path: ":companionprotos")
    implementation project(path: ":communicationproto")
    implementation project(path: ":encryptionrunner")
    implementation project(path: ":trustagent")
    implementation project(path: ":trusteddeviceproto")

    kapt libs.auto.value
    kapt libs.auto.factory
    kapt libs.androidx.room.compiler
    kapt libs.dagger.compiler
}

kapt {
    correctErrorTypes = true
}

protobuf {
    protoc {
        artifact = rootProject.ext.protocVersion
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}
